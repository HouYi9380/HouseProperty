<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jingzhoulive.dao.CommissionProcessMapper" >
  <resultMap id="BaseResultMap" type="cn.jingzhoulive.domain.CommissionProcess" >
    <constructor >
      <idArg column="cpid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="guider" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="vid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="price" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="progress" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pay_id_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pay_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="to_payid_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="to_payid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="chang_time" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cpid, uid, guider, vid, price, progress, pay_id_type, pay_id, to_payid_type, to_payid, 
    level, create_time, chang_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.jingzhoulive.domain.CommissionProcessExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from commissionprocess
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from commissionprocess
    where cpid = #{cpid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from commissionprocess
    where cpid = #{cpid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jingzhoulive.domain.CommissionProcessExample" >
    delete from commissionprocess
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jingzhoulive.domain.CommissionProcess" >
    insert into commissionprocess (cpid, uid, guider, 
      vid, price, progress, 
      pay_id_type, pay_id, to_payid_type, 
      to_payid, level, create_time, 
      chang_time)
    values (#{cpid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{guider,jdbcType=INTEGER}, 
      #{vid,jdbcType=INTEGER}, #{price,jdbcType=BIGINT}, #{progress,jdbcType=INTEGER}, 
      #{payIdType,jdbcType=INTEGER}, #{payId,jdbcType=VARCHAR}, #{toPayidType,jdbcType=INTEGER}, 
      #{toPayid,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{changTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jingzhoulive.domain.CommissionProcess" >
    insert into commissionprocess
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cpid != null" >
        cpid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="guider != null" >
        guider,
      </if>
      <if test="vid != null" >
        vid,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="progress != null" >
        progress,
      </if>
      <if test="payIdType != null" >
        pay_id_type,
      </if>
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="toPayidType != null" >
        to_payid_type,
      </if>
      <if test="toPayid != null" >
        to_payid,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="changTime != null" >
        chang_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cpid != null" >
        #{cpid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="guider != null" >
        #{guider,jdbcType=INTEGER},
      </if>
      <if test="vid != null" >
        #{vid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="progress != null" >
        #{progress,jdbcType=INTEGER},
      </if>
      <if test="payIdType != null" >
        #{payIdType,jdbcType=INTEGER},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="toPayidType != null" >
        #{toPayidType,jdbcType=INTEGER},
      </if>
      <if test="toPayid != null" >
        #{toPayid,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="changTime != null" >
        #{changTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jingzhoulive.domain.CommissionProcessExample" resultType="java.lang.Integer" >
    select count(*) from commissionprocess
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update commissionprocess
    <set >
      <if test="record.cpid != null" >
        cpid = #{record.cpid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.guider != null" >
        guider = #{record.guider,jdbcType=INTEGER},
      </if>
      <if test="record.vid != null" >
        vid = #{record.vid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.progress != null" >
        progress = #{record.progress,jdbcType=INTEGER},
      </if>
      <if test="record.payIdType != null" >
        pay_id_type = #{record.payIdType,jdbcType=INTEGER},
      </if>
      <if test="record.payId != null" >
        pay_id = #{record.payId,jdbcType=VARCHAR},
      </if>
      <if test="record.toPayidType != null" >
        to_payid_type = #{record.toPayidType,jdbcType=INTEGER},
      </if>
      <if test="record.toPayid != null" >
        to_payid = #{record.toPayid,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.changTime != null" >
        chang_time = #{record.changTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update commissionprocess
    set cpid = #{record.cpid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      guider = #{record.guider,jdbcType=INTEGER},
      vid = #{record.vid,jdbcType=INTEGER},
      price = #{record.price,jdbcType=BIGINT},
      progress = #{record.progress,jdbcType=INTEGER},
      pay_id_type = #{record.payIdType,jdbcType=INTEGER},
      pay_id = #{record.payId,jdbcType=VARCHAR},
      to_payid_type = #{record.toPayidType,jdbcType=INTEGER},
      to_payid = #{record.toPayid,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      chang_time = #{record.changTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jingzhoulive.domain.CommissionProcess" >
    update commissionprocess
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="guider != null" >
        guider = #{guider,jdbcType=INTEGER},
      </if>
      <if test="vid != null" >
        vid = #{vid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="progress != null" >
        progress = #{progress,jdbcType=INTEGER},
      </if>
      <if test="payIdType != null" >
        pay_id_type = #{payIdType,jdbcType=INTEGER},
      </if>
      <if test="payId != null" >
        pay_id = #{payId,jdbcType=VARCHAR},
      </if>
      <if test="toPayidType != null" >
        to_payid_type = #{toPayidType,jdbcType=INTEGER},
      </if>
      <if test="toPayid != null" >
        to_payid = #{toPayid,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="changTime != null" >
        chang_time = #{changTime,jdbcType=VARCHAR},
      </if>
    </set>
    where cpid = #{cpid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jingzhoulive.domain.CommissionProcess" >
    update commissionprocess
    set uid = #{uid,jdbcType=INTEGER},
      guider = #{guider,jdbcType=INTEGER},
      vid = #{vid,jdbcType=INTEGER},
      price = #{price,jdbcType=BIGINT},
      progress = #{progress,jdbcType=INTEGER},
      pay_id_type = #{payIdType,jdbcType=INTEGER},
      pay_id = #{payId,jdbcType=VARCHAR},
      to_payid_type = #{toPayidType,jdbcType=INTEGER},
      to_payid = #{toPayid,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      chang_time = #{changTime,jdbcType=VARCHAR}
    where cpid = #{cpid,jdbcType=INTEGER}
  </update>
</mapper>